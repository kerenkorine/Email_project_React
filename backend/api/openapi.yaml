#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.1.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Books Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dummy:
    get:  
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mailboxes:
    get:
      security:
        - bearerAuth: []       
      description: Returns all available mailboxes
      responses:
        401:
          description: Unauthorised
        200:
          description: Mailbox names Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxesResponse' 
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []       
      description: Create a new mailbox
      requestBody:
        description: Mailbox to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMailbox'
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewMailbox'
        400:
          description: Invalid request body
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mail:
    get:
      security:
        - bearerAuth: []       
      description: Returns all Emails or Emails from a specific mailbox based on the mailbox query parameter
      parameters: 
        - in: query 
          name: mailbox
          required: true
          schema: 
            type: string
        - in: query
          name: from
          required: false
          schema:
            type: string
      responses:
        401:
          description: Unauthorised
        200:
          description: Email Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsResponse' 
        404:
          description: Mailbox not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      security:
        - bearerAuth: []       
      description: Save a new email
      requestBody: 
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Invalid request body
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mail/{id}:
    get: 
      security:
        - bearerAuth: []       
      description: Returns a specific Email by id
      parameters: 
        - in: path 
          name: id
          required: true 
          schema: 
            type: string
            format: uuid
      responses: 
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        404:
          description: Email not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      security:
        - bearerAuth: []        
      description: Move an email to a different mailbox
      parameters:
        - in: path
          name: id 
          required: true
          schema: 
            type: string
            format: uuid
        - in: query
          name: mailbox
          required: true
          schema:
            type: string
      responses:
        204: 
          description: Successful operation
        404:
          description: Email not found
        409:
          description: Conflict - cannot move email to 'sent' mailbox
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message

    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
      required:
        - name
        - accessToken

    DummyResponse:
      properties:
        message:
          type: string
      required:
        - message
  
    EmailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Emails'

    Emails:
      type: object
      properties:
        mailbox:
          type: string
        mail:
          type: array
          items:
            type: object
            properties:
              to:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              from:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              received:
                type: string
              sent:
                type: string
              subject:
                type: string
              content:
                type: string


    Email:
      type: object
      properties:
        id:
          type: string
          format: uuid
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        from:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        received:
          type: string
        sent:
          type: string
        subject:
          type: string
        content:
          type: string
      required:
        - to
        - content
        - subject

    MailboxesResponse:
      type: array
      items:
        type: string
    
    NewMailbox:
      type: object
      properties:
        name:
          type: string
      required:
        - name

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
